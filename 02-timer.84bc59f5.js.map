{"mappings":"AAwNAA,QAAQC,IAAI","sources":["src/js/02-timer.js"],"sourcesContent":["\n// import flatpickr from \"flatpickr\";\n// // Дополнительный импорт стилей\n// import \"flatpickr/dist/flatpickr.min.css\";\n\n\n// let selectedDate = null;\n\n// const options = {\n//   enableTime: true,\n//   time_24hr: true,\n//   defaultDate: new Date(),\n//   minuteIncrement: 1,\n//   onClose(selectedDates) {\n//       console.log(selectedDates[0]);\n//        selectedDate = selectedDates[0].getTime();\n//       checkData()\n//   },\n// };\n\n// flatpickr('#datetime-picker', options)\n\n// const refs = {\n//    container: document.querySelectorAll('.field'),\n//   inputDate: document.querySelector('input#datetime-picker'),\n//   btnStart: document.querySelector('button[data-start]'),\n//   days: document.querySelector('.value[data-days]'),\n//   hours: document.querySelector('.value[data-hours]'),\n//   minutes: document.querySelector('.value[data-minutes]'),\n//   seconds: document.querySelector('.value[data-seconds]'),\n// };\n\n\n\n\n\n\n\n\n\n// refs.btnStart.disabled = true;\n\n// function checkData(e) {\n//   const currentData = Date.now();\n\n//     if (currentData > selectedDate) {\n//         // window.alert('Please choose a date in the future')\n//         Notiflix.Notify.success('Gohjb start a timing', {\n//             timeout: 500\n//         })\n//     } else {\n//         refs.btnStart.disabled = false;\n//     }\n// }\n\n\n// const timer = {\n//     intervalId: null,\n//     isActive: false,\n\n//     start() {\n//         if (this.isActive) {\n//             return \n//         }\n//         const startTime = Date.now();\n//         this.isActive = true \n\n\n//         setInterval(() => {\n//             const currentTime = Date.now();  \n//             const deltaTime = selectedDate - currentTime;\n//             const resultTime = convertMs(deltaTime);\n//            updateTimer(resultTime)\n\n            \n//         }, 1000);\n//     }\n// }\n\n\n\n// function convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days =formatValue(Math.floor(ms / day));\n//   // Remaining hours\n//   const hours = formatValue(Math.floor((ms % day) / hour));\n//   // Remaining minutes\n//   const minutes = formatValue(Math.floor(((ms % day) % hour) / minute));\n//   // Remaining seconds\n//   const seconds = formatValue(Math.floor((((ms % day) % hour) % minute) / second));\n\n//   return { days, hours, minutes, seconds };\n// }\n\n// function formatValue(value) {\n//   return String(value).padStart(2, '0');\n// }\n\n// function updateTimer({ days, hours, minutes, seconds }) {\n//   refs.days.textContent = days;\n//   refs.hours.textContent = hours;\n//   refs.minutes.textContent = minutes;\n//   refs.seconds.textContent = seconds;\n// }\n\n\n// refs.btnStart.addEventListener('click', () => {\n//     timer.start()\n// })\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n\n// class Timer {\n\n//     #onChangeCallback = () => {};\n//     constructor({ onChange } = {}) {\n//     if (onChange) {\n//       this.#onChangeCallback = onChange;\n//     }\n//   }\n   \n//     start(year) {\n//         setInterval(() => {\n//             const delta = new Date(year).getTime() - Date.now();\n//             console.log(delta)\n//            timer.convertMs(delta)\n//         }, 1000);\n//     }\n\n//          convertMs(ms) {\n//   // Number of milliseconds per unit of time\n//   const second = 1000;\n//   const minute = second * 60;\n//   const hour = minute * 60;\n//   const day = hour * 24;\n\n//   // Remaining days\n//   const days = Math.floor(ms / day);\n//   // Remaining hours\n//   const hours = Math.floor((ms % day) / hour);\n//   // Remaining minutes\n//   const minutes = Math.floor(((ms % day) % hour) / minute);\n//   // Remaining seconds\n//              const seconds = Math.floor((((ms % day) % hour) % minute) / second);\n//             this.#onChangeCallback({\n//                     days: Timer.formatValue(days),\n//                     hours: Timer.formatValue(hours),\n//                     minutes: Timer.formatValue(minutes),\n//                     seconds: Timer.formatValue(seconds),\n//                 });   \n//          }\n    \n//      static formatValue(value) {\n//          return value.toString().padStart(2, '0');\n         \n//      }\n    \n\n\n  \n    \n//     }\n    \n   \n\n\n    \n// const timer = new Timer({onChange: OnCountDownChange})\n\n\n\n\n\n\n\n// function checkData(e) {\n//   const currentData = Date.now();\n\n//     if (currentData > selectedDate) {\n//         window.alert('Please choose a date in the future')\n//     } else {\n//         refs.btn.disabled = false;\n//     }\n// }\n\n\n\n\n// function OnCountDownChange(data) {\n// //    refs.days.textContent = days;\n// //    refs.hours.textContent = hours;\n// //    refs.minutes.textContent = minutes;\n// //    refs.seconds.textContent = seconds;\n//     // const { days, hours, minutes, seconds } = data;\n//     console.log(data)\n// }\n\n\nconsole.log('sdfsd')"],"names":["console","log"],"version":3,"file":"02-timer.84bc59f5.js.map"}